plugins {
    id 'java'
    id 'jacoco'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'com.github.sherter.google-java-format' version '0.9'
    id 'com.intershop.gradle.javacc' version '4.0.1'
    id 'maven-publish'
}

group 'silverchain'

version '0.1.0'

sourceCompatibility = 1.8

targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.23.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0'
}

javacc {
    javaCCVersion = '7.0.9'
    configs {
        parser {
            inputFile = file('src/main/javacc/silverchain.jj')
            packageName = 'silverchain.parser'
        }
    }
}

shadowJar {
    manifest {
        attributes('Main-Class' : 'silverchain.command.EntryPoint')
    }
}

test {
    useJUnitPlatform()
}

check {
    dependsOn jacocoTestReport
}

jacoco {
    toolVersion = '0.8.7'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'silverchain/parser/ParseException.class',
                    'silverchain/parser/Parser.class',
                    'silverchain/parser/ParserConstants.class',
                    'silverchain/parser/ParserTokenManager.class',
                    'silverchain/parser/SimpleCharStream.class',
                    'silverchain/parser/Token.class',
                    'silverchain/parser/TokenMgrError.class',
                    'silverchain/command/EntryPoint.class'
            ])
        })
    }
}

task testGeneratedJava(type: Exec) {
    dependsOn 'test'
    workingDir 'src/test/resources/java'
    commandLine './gradlew', 'check', '--no-daemon'
}

check {
    dependsOn testGeneratedJava
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.github.tomokinakamaru.silverchain'

            from components.java
        }
    }
}
